// Generated by CoffeeScript 1.9.0
(function() {
  var App, config, helpers;

  helpers = {
    getColorClass: function(value, qualitative) {
      var setting, _i, _len;
      if (value == null) {
        value = Infinity;
      }
      if (qualitative == null) {
        qualitative = [];
      }
      for (_i = 0, _len = qualitative.length; _i < _len; _i++) {
        setting = qualitative[_i];
        if (value <= setting.value) {
          return setting["class"];
        }
      }
      return false;
    },
    aqiQualitative: [
      {
        name: 'Good',
        "class": 'good',
        lower: 0,
        value: 50
      }, {
        name: 'Moderate',
        "class": 'moderate',
        lower: 51,
        value: 100
      }, {
        name: 'Mildly unhealthy',
        "class": 'unhealthy-mild',
        lower: 101,
        value: 150
      }, {
        name: 'Unhealthy',
        "class": 'unhealthy',
        lower: 151,
        value: 200
      }, {
        name: 'Very unhealthy',
        "class": 'unhealthy-very',
        lower: 201,
        value: 300
      }, {
        name: 'Hazardous',
        "class": 'hazardous',
        lower: 301,
        value: 500
      }
    ],
    soundQualitative: [
      {
        name: 'Quiet suburb (50 db)',
        "class": 'db50 qualitative-default',
        value: 50
      }, {
        name: 'Normal conversation (60 db)',
        "class": 'db60 qualitative-default',
        value: 60
      }, {
        name: 'Vacuum cleaner (70 db)',
        "class": 'db70 qualitative-default',
        value: 70
      }, {
        name: 'Freight train (80 db)',
        "class": 'db80 qualitative-default',
        value: 80
      }, {
        name: 'Subway train (90 db)',
        "class": 'db90 qualitative-default',
        value: 90
      }, {
        name: 'Jack hammer (100 db)',
        "class": 'db100 qualitative-default',
        value: 100
      }
    ]
  };

  config = {
    charts: [
      {
        type: 'Filter',
        params: {
          el: 'filter-container',
          chart: 'filter',
          dimension: 'none',
          scale: d3.scale.linear,
          width: 110,
          height: 530,
          qualitative: helpers.aqiQualitative,
          margin: {
            top: 0,
            right: 10,
            bottom: 10,
            left: 5
          }
        }
      }, {
        type: 'AreaChart',
        params: {
          el: 'timeseries-airquality_raw',
          chart: 'timeseries',
          dimension: 'airquality_raw',
          name: 'air quality',
          yAxisLabel: 'Air quality index',
          round: 0,
          scaleX: d3.time.scale,
          scaleY: d3.scale.linear,
          width: 700,
          height: 370,
          qualitative: helpers.aqiQualitative,
          margin: {
            top: 30,
            right: 30,
            bottom: 0,
            left: 30
          }
        }
      }, {
        type: 'BoxPlotVertical',
        params: {
          el: 'timeseries-temperature',
          chart: 'timeseries',
          dimension: 'temperature',
          name: 'Temperature',
          yAxisLabel: 'Daily Temperature Highs and Lows (degrees c)',
          round: 0,
          scaleX: d3.time.scale,
          scaleY: d3.scale.linear,
          width: 700,
          height: 120,
          margin: {
            top: 0,
            right: 30,
            bottom: 30,
            left: 30
          }
        }
      }, {
        type: 'BoxPlot',
        params: {
          el: 'ranking-airquality_raw',
          chart: 'ranking',
          dimension: 'airquality_raw',
          name: 'Air quality',
          xAxisLabel: 'Air quality index',
          round: 0,
          scale: d3.scale.linear,
          width: 700,
          height: 290,
          qualitative: helpers.aqiQualitative,
          margin: {
            top: 20,
            right: 50,
            bottom: 40,
            left: 165
          }
        }
      }, {
        type: 'ScoreCard',
        params: {
          el: 'scorecard-airquality_raw',
          chart: 'timeseries',
          dimension: 'airquality_raw',
          xAxisLabel: 'Air quality index',
          round: 0,
          qualitative: helpers.aqiQualitative,
          margin: {
            top: 40,
            right: 50,
            bottom: 40,
            left: 165
          }
        }
      }
    ]
  };

  App = (function() {
    function App(_at_config, _at_data, city, helpers) {
      var chart, data, newChart, _i, _len, _ref;
      this.config = _at_config;
      this.data = _at_data;
      this.charts = [];
      this.filterChart;
      _ref = this.config.charts;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        chart = _ref[_i];
        data = _.findWhere(this.data, {
          dimension: chart.params.dimension,
          chart: chart.params.chart
        });
        if (data != null) {
          newChart = new APP.charts[chart.type](this, chart.params, data.data, city, helpers);
          this.charts.push(newChart);
          if (chart.type === 'Filter') {
            this.filterChart = newChart;
          }
        }
      }
    }

    App.prototype.update = function(_at_data) {
      var chart, data, _i, _len, _ref, _results;
      this.data = _at_data;
      _ref = this.charts;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        chart = _ref[_i];
        data = _.findWhere(this.data, {
          dimension: chart.params.dimension,
          chart: chart.params.chart
        });
        _results.push(chart.update(data.data));
      }
      return _results;
    };

    App.prototype.getFilters = function() {
      return this.filterChart.getFilters();
    };

    return App;

  })();

  this.app = new App(config, data, city, helpers);

}).call(this);
